팁: 코드 짜기 좋게 식 잘 세우기


다리 놓기 성공
시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
0.5 초 (추가 시간 없음)	128 MB	105890	49459	40165	47.960%
문제
재원이는 한 도시의 시장이 되었다. 이 도시에는 도시를 동쪽과 서쪽으로 나누는 큰 일직선 모양의 강이 흐르고 있다. 하지만 재원이는 다리가 없어서 시민들이 강을 건너는데 큰 불편을 겪고 있음을 알고 다리를 짓기로 결심하였다. 강 주변에서 다리를 짓기에 적합한 곳을 사이트라고 한다. 재원이는 강 주변을 면밀히 조사해 본 결과 강의 서쪽에는 N개의 사이트가 있고 동쪽에는 M개의 사이트가 있다는 것을 알았다. (N ≤ M)

재원이는 서쪽의 사이트와 동쪽의 사이트를 다리로 연결하려고 한다. (이때 한 사이트에는 최대 한 개의 다리만 연결될 수 있다.) 재원이는 다리를 최대한 많이 지으려고 하기 때문에 서쪽의 사이트 개수만큼 (N개) 다리를 지으려고 한다. 다리끼리는 서로 겹쳐질 수 없다고 할 때 다리를 지을 수 있는 경우의 수를 구하는 프로그램을 작성하라.



입력
입력의 첫 줄에는 테스트 케이스의 개수 T가 주어진다. 그 다음 줄부터 각각의 테스트케이스에 대해 강의 서쪽과 동쪽에 있는 사이트의 개수 정수 N, M (0 < N ≤ M < 30)이 주어진다.

출력
각 테스트 케이스에 대해 주어진 조건하에 다리를 지을 수 있는 경우의 수를 출력한다.

예제 입력 1 
3
2 2
1 5
13 29
예제 출력 1 
1
5
67863915



solution

/*
N M
1 m = m개
2 m = m*(m-1)/2
3 m = {m * (m-1) * (m-2) / 2} /3
n부터 1씩 줄이면서 n번 곱한 후  2부터(1부터라고 해도 됨) n까지 나누기.
*/


#include<stdio.h>

long long bridge(int a, int b);


int main() {
	int T;
	int N, M;


	scanf("%d", &T);       //테스트 케이스 개수 T
	for (int i = 0; i < T; i++) {
		scanf("%d%d", &N, &M);       //서쪽과 동쪽 사이트 개수 N, M
		printf("%lld\n", bridge(N, M));
	}

	return 0;
}

//다리를 지을 수 있는 경우의 수 구하는 함수///////
long long bridge(int a, int b) {
	long long ans = 1;
	for (int i = 1; i <= a; i++) {  //1부터 N까지 반복
		ans *= (b + 1 - i);         //M부터 1씩 빼면서 N번 곱하기
		ans /= i;                   //1부터 N까지 나누기
	}

	return ans;
}
